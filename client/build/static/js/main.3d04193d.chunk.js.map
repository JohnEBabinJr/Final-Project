{"version":3,"sources":["spotify-icon.png","config_example.js","guest_config.js","hash.js","Player.js","Room.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","require","config","scopes","guestScopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Player","props","backgroundStyles","backgroundImage","concat","album","images","url","progressBarStyles","width","progress_ms","duration_ms","react_default","a","createElement","className","src","name","artists","is_playing","style","Room","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modalIsOpen","openModal","bind","assertThisInitialized","afterOpenModal","closeModal","setState","Button","onClick","lib_default","isOpen","onAfterOpen","onRequestClose","overlayClassName","contentLabel","id","class","for","type","readonly","value","React","Component","API","getTracks","axios","get","getTracksById","getTracksByRoomId","deleteTracks","delete","saveTrack","trackData","post","App","getStuffFromDB","then","res","console","log","makeRoom","roomId","room","Arr","i","push","Math","floor","random","join","handleInputChange","event","_event$target","target","defineProperty","handleFormSubmit","preventDefault","getSong","token","username","tempTrack","tempArtist","tempAlbum","getCurrentlyPlaying","_token","access_token","_this2","$","beforeSend","xhr","setRequestHeader","success","data","_this3","query","alert","tracks","items","handleTrack","trackId","trackName","artistName","albumName","albumCover","userName","github","href","aboutUs","home","float","marginLeft","placeholder","onChange","logo","alt","src_Room_0","src_Player_0","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d04193d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spotify-icon.daf13776.png\";","require(\"dotenv\").config();\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"749b6ea423c24fef905f41108b8c3a3f\";\nexport const clientSecret = \"e42d147ddad74c2ab3cee9af552aac39\";\nexport const redirectUri = \"http://localhost:3000/\";\nexport const scopes = [\n  \"user-top-read\",\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n  \"streaming\",\n  \"playlist-modify-public\"\n];\n\n//id(\"749b6ea423c24fef905f41108b8c3a3f\");\n//e42d147ddad74c2ab3cee9af552aac39\n\n//process.env.SPOTIFY_SECRET\n","require(\"dotenv\").config();\nexport const guestEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const guestId = \"749b6ea423c24fef905f41108b8c3a3f\";\nexport const guestUri = \"http://localhost:3000/\";\nexport const guestScopes = [\n  \"user-top-read\",\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n  \"playlist-modify-public\"\n];\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","import React from \"react\";\nimport \"./Player.css\";\n\nconst Player = props => {\n  const backgroundStyles = {\n    backgroundImage: `url(${props.item.album.images[0].url})`\n  };\n\n  const progressBarStyles = {\n    width: (props.progress_ms * 100) / props.item.duration_ms + \"%\"\n  };\n\n  return (\n    <div className=\"Test\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">{props.item.name}</div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"now-playing__status\">\n            {props.is_playing ? \"Playing\" : \"Paused\"}\n          </div>\n          <div className=\"progress\">\n            <div className=\"progress__bar\" style={progressBarStyles} />\n          </div>\n        </div>\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import \"./Room.css\";\nimport React from \"react\";\nimport Modal from \"react-modal\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Room extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: false\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {}\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.openModal}>create ur room</Button>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          className=\"Modal\"\n          overlayClassName=\"Overlay\"\n          contentLabel=\"Example Modal\"\n        >\n          <Button id=\"close\" onClick={this.closeModal}>\n            <i class=\"fas fa-window-close\"></i>\n          </Button>\n          <div className=\"content\">\n            <p>Let's get you started. Enter a nickname for yourself.</p>\n            <form class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <label for=\"nickname\" class=\"sr-only\">\n                  nickname\n                </label>\n                <input\n                  type=\"text\"\n                  readonly\n                  class=\"form-control-plaintext\"\n                  id=\"nickname\"\n                  value=\"email@example.com\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary mb-2\"\n                id=\"submitNickname\"\n              >\n                <i class=\"fas fa-play-circle fa-1x\"></i>\n              </button>\n            </form>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n// <div className=\"form-inline\">\n//   <h6>Enter ur username</h6>\n//   <div id=\"room-form\" className=\"form-inline\">\n//     <div id=\"room-input\">\n//       <label for=\"username\"></label>\n//       <input\n//         type=\"text\"\n//         class=\"form-control\"\n//         id=\"username\"\n//         placeholder=\"enter ur name (edit this in room.js)\"\n//       />\n//     </div>\n\n//     <button type=\"submit\" class=\"btn btn-primary\" id=\"room-btn\">\n//       Create New Room\n//     </button>\n//   </div>\n// </div>\n\nexport default Room;\n","import axios from \"axios\";\n\nexport default {\n  // Gets books from the Google API\n  // getTracks: function(q) {\n  //   return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\n  // },\n\n  // Gets all saved books\n  getTracks: function() {\n    return axios.get(\"/api/tracks\");\n  },\n  getTracksById: function(id) {\n    return axios.get(\"/api/tracks/\" + id);\n  },\n  getTracksByRoomId: function(id) {\n    return axios.get(\"/api/tracks/\" + id);\n  },\n  // Deletes the saved book with the given id\n  deleteTracks: function(id) {\n    return axios.delete(\"/api/tracks/\" + id);\n  },\n  // Saves an book to the database\n  saveTrack: function(trackData) {\n    return axios.post(\"/api/tracks\", trackData); //change /api/tracks to /3001 to bypass proxy\n  }\n};\n\n//instead of api/tracks, use /room/:roomId and then /room/:roomId/api/:trackId\n","import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport {\n  authEndpoint,\n  clientId,\n  //clientSecret,\n  redirectUri,\n  scopes\n} from \"./config_example.js\";\nimport {\n  guestEndpoint,\n  guestId,\n  guestUri,\n  guestScopes\n} from \"./guest_config.js\";\nimport \"./App.css\";\nimport hash from \"./hash\";\nimport logo from \"./spotify-icon.png\";\nimport Player from \"./Player\";\nimport Room from \"./Room\";\nimport API from \"./utils/API\";\nimport ReactDOM from \"react-dom\";\n\n// Identify if host or guest\n// Full search\n// Playlist\n//\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      room: \"\",\n      username: \"\",\n      tempTrack: \"\",\n      tempArtist: \"\",\n      tempAlbum: \"\",\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  componentDidMount() {\n    //Set token\n    let _token = hash.access_token;\n    if (_token) {\n      this.setState({\n        token: _token\n      });\n      //this.getCurrentlyPlaying(_token);\n\n      this.getStuffFromDB();\n    }\n  }\n\n  getStuffFromDB = () => {\n    API.getTracks({}).then(res => console.log(\"DB: \" + res));\n    API.getTracksById(\"/objectid/5dccc5c69ff432534eb5157c\").then(res =>\n      console.log(res)\n    );\n    API.getTracksByRoomId(\"1\").then(res => console.log(res));\n  };\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        console.log(\"data\", data);\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  getSong(token) {\n    var query = \"\";\n    if (this.state.tempTrack && this.state.tempArtist && this.state.tempAlbum) {\n      query = `https://api.spotify.com/v1/search?q=${this.state.tempTrack}&type=track&artist=${this.state.tempArtist}&album=${this.state.tempAlbum}&offset=0&limit=1`;\n    } else if (\n      this.state.tempTrack &&\n      this.state.tempArtist &&\n      !this.state.tempAlbum\n    ) {\n      query = `https://api.spotify.com/v1/search?q=${this.state.tempTrack}&type=track&artist=${this.state.tempArtist}&offset=0&limit=1`;\n    } else if (\n      this.state.tempTrack &&\n      !this.state.tempArtist &&\n      this.state.tempAlbum\n    ) {\n      query = `https://api.spotify.com/v1/search?q=${this.state.tempTrack}&type=track&album=${this.state.tempAlbum}&offset=0&limit=1`;\n    } else if (\n      !this.state.tempTrack &&\n      this.state.tempArtist &&\n      this.state.tempAlbum\n    ) {\n      query = `https://api.spotify.com/v1/search?type=track&artist=${this.state.tempArtist}&album=${this.state.tempAlbum}&offset=0&limit=1`;\n    } else if (\n      this.state.tempTrack &&\n      !this.state.tempArtist &&\n      !this.state.tempAlbum\n    ) {\n      query = `https://api.spotify.com/v1/search?q=${this.state.tempTrack}&type=track&offset=0&limit=1`;\n    } else if (\n      !this.state.tempTrack &&\n      this.state.tempArtist &&\n      !this.state.tempAlbum\n    ) {\n      query = `https://api.spotify.com/v1/search?type=track&artist=${this.state.tempArtist}&offset=0&limit=1`;\n    } else if (\n      !this.state.tempTrack &&\n      !this.state.tempArtist &&\n      this.state.tempAlbum\n    ) {\n      query = `https://api.spotify.com/v1/search?type=track&album=${this.state.tempAlbum}&offset=0&limit=1`;\n    } else {\n      alert(\"Must enter at least one value!\");\n    }\n\n    $.ajax({\n      url: query,\n\n      //\"https://api.spotify.com/v1/search?q=humble&type=track&artist=kendrick&offset=0&limit=1\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        console.log(\"data\", data);\n        this.setState({\n          item: data.tracks.items[0],\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n        this.handleTrack(data);\n      }\n    });\n  }\n\n  makeRoom = () => {\n    // var hashids = new Hashids(\"this is my salt\"),\n    //   id = hashids.encode(1, 2, 3),\n    //   numbers = hashids.decode(id);\n    let roomId;\n    if (!this.state.room) {\n      var Arr = [];\n      function getRandomInt() {\n        return Math.floor(Math.random() * Math.floor(10));\n      }\n      for (var i = 0; i < 4; i++) {\n        Arr.push(getRandomInt());\n      }\n\n      roomId = Arr.join(\"\");\n      console.log(roomId);\n      this.setState({ room: roomId });\n      return roomId;\n    } else {\n      roomId = this.state.room;\n      return roomId;\n    }\n  };\n\n  handleTrack(data) {\n    console.log(\"handletrack\");\n    API.saveTrack({\n      roomId: this.makeRoom(),\n      trackId: data.tracks.items[0].id,\n      trackName: data.tracks.items[0].name,\n      artistName: data.tracks.items[0].artists[0].name,\n      albumName: data.tracks.items[0].album.name,\n      albumCover: data.tracks.items[0].album.images[1].url,\n      userName: \"Connor\"\n    }).then(res => console.log(\"result:\" + res));\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    event.preventDefault();\n    this.getSong(this.state.token);\n  };\n\n  render() {\n    const github = (\n      <a href=\"https://github.com/JohnEBabinJr/final-project/\" class=\"mr-1\">\n        <i class=\"fab fa-github fa-1x\"></i>\n      </a>\n    );\n\n    const aboutUs = (\n      <a href=\"/about\" class=\"ml-2\">\n        About Us\n      </a>\n    );\n\n    const homebutton = {\n      float: \"left\",\n      marginLeft: \"10px\"\n    };\n\n    const home = (\n      <a href=\"/\">\n        <i class=\"fas fa-home\"></i>\n      </a>\n    );\n\n    const props = {};\n\n    return (\n      // Put things that you want to appear on every page vvv\n      <div className=\"App\">\n        <div className=\"home\">\n          <a style={homebutton}>{home}</a>\n        </div>\n        <div className=\"links\">\n          {github} | {aboutUs}\n        </div>\n        <header className=\"App-header\">\n          {this.state.token && (\n            <form>\n              <input\n                type=\"text\"\n                placeholder=\"Track\"\n                name=\"tempTrack\"\n                value={this.state.tempTrack}\n                onChange={this.handleInputChange}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Artist\"\n                name=\"tempArtist\"\n                value={this.state.tempArtist}\n                onChange={this.handleInputChange}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Album\"\n                name=\"tempAlbum\"\n                value={this.state.tempAlbum}\n                onChange={this.handleInputChange}\n              />\n              <button onClick={this.handleFormSubmit}>Submit</button>\n            </form>\n          )}\n          {!this.state.token && (\n            <div class=\"container\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <div class=\"row\">\n                <div class=\"col col-5 mx-auto\" id=\"app\">\n                  <p class=\"lead mx-3\">\n                    Collaborate on the ultimate roadtrip playlist with your\n                    friends using Spotify. Share the link, queue up songs, and\n                    export your playlist to relive the memories.\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Host\n            </a>\n          )}\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${guestEndpoint}?client_id=${guestId}&redirect_uri=${guestUri}&scope=${guestScopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Guest\n            </a>\n          )}\n          {/* Room */}\n          {this.state.token && <Room />}\n          {/* Player */}\n          {this.state.token && (\n            <Player\n              item={this.state.item}\n              is_playing={this.state.is_playing}\n              progress_ms={this.progress_ms}\n            />\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nconsole.log(\"made it here\");\nReactDOM.render(<App />, document.getElementById(\"root\"));\nconsole.log(\"should be calling app\");\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}